syntax = "proto3";

package ru.pavkin.booking.common.protobuf.v1;
option java_package = "ru.pavkin.booking.booking.protobuf.msg";
option optimize_for = SPEED;

option (scalapb.options) = {
  import: "ru.pavkin.booking.common.protobuf.TypeMappers._"
  single_file: true
};

import "scalapb/scalapb.proto";
import "Common.proto";

message BookingPlaced {
    string clientId = 1 [(scalapb.field).type = "ru.pavkin.booking.common.models.ClientId"];
    string concertId = 2 [(scalapb.field).type = "ru.pavkin.booking.common.models.ConcertId"];
    repeated Seat seats = 3 [(scalapb.field).type = "ru.pavkin.booking.common.models.Seat"];
    int64 timestamp = 4 [(scalapb.field).type = "java.time.Instant"];
}

message BookingConfirmed {
    repeated Ticket tickets = 1 [(scalapb.field).type = "ru.pavkin.booking.common.models.Ticket"];
    int64 expiresAt = 2 [(scalapb.field).type = "Option[java.time.Instant]"];
    int64 timestamp = 3 [(scalapb.field).type = "java.time.Instant"];
}
message BookingDenied {
    string reason = 1;
    int64 timestamp = 2 [(scalapb.field).type = "java.time.Instant"];
}
message BookingCancelled {
    string reason = 1;
    int64 timestamp = 2 [(scalapb.field).type = "java.time.Instant"];
}
message BookingExpired {
    int64 timestamp = 1 [(scalapb.field).type = "java.time.Instant"];
}
message BookingPaid {
    string paymentId = 1 [(scalapb.field).type = "ru.pavkin.booking.common.models.PaymentId"];
    int64 timestamp = 2 [(scalapb.field).type = "java.time.Instant"];
}
message BookingSettled {
    int64 timestamp = 1 [(scalapb.field).type = "java.time.Instant"];
}
